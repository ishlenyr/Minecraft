:root {
    --translate-x: -300px;
    --translate-y: 64px;
    --translate-z: 1000px;
    --rotate-y: 224deg;
    --rotate-x: -4deg;
}

.room1 {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transform-origin: center;
    transform: translate3d(200px);
}

.room1>div {
    position: absolute;
}

.nether {
    background-image: url("../assets/nether.png");
    image-rendering: pixelated;
}

.nether-gold {
    background-image: url("../assets/nether_gold_ore.png");
    image-rendering: pixelated;
}

.obsidian {
    background-image: url("../assets/obsidian.png");
    image-rendering: pixelated;
}

.portal {
    background-image: url("../assets/portal.gif");
    image-rendering: pixelated;
}

.floor-mainpart {
    height: calc(var(--block-size) * 9);
    width: calc(var(--block-size) * 7);
    transform: rotateX(90deg) translate3d(0, 0, calc(var(--block-size) * 4));
}

.floor2 {
    height: calc(var(--block-size) * 1);
    width: calc(var(--block-size) * 1);
    transform: rotateX(90deg) translate3d(calc(var(--block-size) * 0),
            calc(var(--block-size) * 2.5), 0);
}

.floor3 {
    height: calc(var(--block-size) * 4);
    width: calc(var(--block-size) * 1);
    transform: rotateX(90deg) translate3d(calc(var(--block-size) * 5),
            calc(var(--block-size) * -1),
            calc(var(--block-size) * 4.5));
}

.floor4 {
    height: calc(var(--block-size) * 4);
    width: calc(var(--block-size) * 1);
    transform: rotateX(90deg) translate3d(calc(var(--block-size) * 5),
            calc(var(--block-size) * -1),
            calc(var(--block-size) * 1.5));
}

.door {
    width: var(--block-size);
    height: calc(var(--block-size) * 2);
    position: absolute;
    background-size: 100%;
    background-repeat: no-repeat;
    background-position: bottom, top;
    image-rendering: pixelated;
    transform-origin: left;
}

.wooden-door {
    background-image: url("../assets/oak_door_bottom.png"),
        url("../assets/oak_door_top.png");
}

.door1 {
    transform: rotateY(90deg) translate3d(calc(var(--block-size) * -0), calc(var(--block-size) * -1.5), calc(var(--block-size) * 0));
}

.torch1 {
    transform: rotateY(-90deg) rotateZ(30deg) 
            translate3d(calc(var(--block-size) * -4.5),
            calc(var(--block-size) * 1),
            calc(var(--block-size) * -2));
}